#!/usr/bin/env python3

# A simple program that returns the current stardate, or converts a stardate
# into the original "human" date.
#
# Usage:
#   stardate [X]
#
# If X is specified, it is a stardate to be converted back. Otherwise, the
# current date is converted into a stardate.
#
# The whole concept works on the following assumption: one century is worth ten
# thousand stardate units. This comes from the fact that, in TNG stardates, the
# number 4 in a 5-digit stardate stands for "the 24th century".
#
# With the lowest "century" being the 20th (giving us a leading zero), we can
# say that 1/1/1901 is the starting point of all stardates. All that's left is
# to calculate the amount of days (here, seconds) from the origin and convert it
# to stardate units. The ratio is 1 day = 100/365 stardate units.

from datetime import datetime, timedelta
import sys

start = datetime(1901, 1, 1)
conversion_rate = 1.0 / (365.242199 * 24 * 36)

def convert_to(end):
    difference = end - start
    time_since = difference.days * 86400 + difference.seconds
    stardate = time_since * conversion_rate
    print("%.2f" % stardate)

def convert_from(stardate):
    time_since = stardate / conversion_rate
    end = start + timedelta(time_since // 86400, time_since % 86400)
    print(end)

if len(sys.argv) > 1:
    if len(sys.argv) == 2:
        convert_from(float(sys.argv[1]))
    else:
        print("Expected 1 or no parameters")
else:
    convert_to(datetime.now())
