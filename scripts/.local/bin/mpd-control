#!/bin/bash

host=185.222.117.80
port=6600

http="https://mpd.nonk.users.as205315.net"

function _mpc {
    mpc --host=$host --port=$port "$@"
}

mpc playlist | grep $http > /dev/null || mpc add $http
_mpc repeat on > /dev/null &

function self {
    command=$1

    [ $# -gt 1 ] && shift

    case "$command" in
    play)
        [ "$1" ] || exit 1

        _mpc stop; _mpc clear

        self queue "$1"

        mpc stop; mpc play

        notify-send "Playing"
        ;;
    prompt)
        _mpc listall | prompt "Select a track"
        ;;
    select)
        result=$(self prompt)
        [ "$result" ] && self play "$result"
        ;;
    queue)
        if [ $# -gt 0 ]; then
            result=$(for track in "$@"; do echo "$track"; done)
        else
            result=$(self prompt)
        fi

        if [ "$result" ]; then
            echo "$result" | while read track; do
                _mpc search filename "$track" | _mpc add
            done

            _mpc play
        fi
        ;;
    toggle)
        _mpc | grep "^\[playing]" && self pause || self resume
        ;;
    pause)
        _mpc pause
        mpc stop
        notify-send "Paused"
        ;;
    resume)
        _mpc play
        mpc play
        notify-send "Resumed"
        ;;
    status)
        status=$(_mpc status)
        notify-send "Status" "$status"
        echo "$status"
        ;;
    http)
        echo "$http"
        ;;
    next|prev|single)
        _mpc "$command" && status
        ;;
    download)
        if [ $# -eq 1 ]; then
            cmd="cd ~/music/ && youtube-dl -x \"$1\" && mpc update"

            if echo "$cmd" | ssh -T "music@$host"; then
                notify-send-send "Done" "$1"
            else
                notify-send-send "Failed" "$1"
            fi
        else
            while read url; do
                self download "$url"
            done
        fi
        ;;
    *)
        _mpc "$@"
        ;;
    esac
}

self "$@"
