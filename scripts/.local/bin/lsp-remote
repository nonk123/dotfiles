#!/bin/bash

user=lsp
host=185.222.117.73
reverse=2000

addr=$user@$host

project_root=$(pwd)

dest="/tmp/$(basename $project_root)"
archive=/tmp/transfer.tar
env_dir=env/

cd $project_root

function project_ls {
    git ls-files -X .gitignore
    git ls-files -X .gitignore -o
}

function mount {
    rm -f $archive

    if ssh $addr "test ! -d $dest"; then
        tar -czf $archive -T <(project_ls; [ -d $env_dir ] && echo $env_dir)

        scp $archive $addr:$archive

        ssh $addr << EOF
mkdir -p $dest
cd $dest
tar -xf $archive
echo > .projectile
EOF
    fi

    mainloop &
}

export addr dest

function copy {
    file=$(echo $1 | awk '{ print $1 $3 }')

    if ssh $addr "mkdir -p $(dirname $dest/$file)"; then
        scp $file $addr:$dest/$file
    fi
}

export -f copy

function mainloop {
    inotifywait -rm -e modify -e create -e moved_to $(project_ls) | parallel copy
}

exec 3<<EOF
function pyls_deps {
    source $env_dir/bin/activate
    python3 -m pip install -r requirements.txt
}

cd $dest
[ -d $env_dir ] && export VIRTUAL_ENV=$env_dir && (pyls_deps) &
exec $@
EOF

connector=/tmp/lsp_connector

{
    mount
    scp /proc/$$/fd/3 $addr:$connector
    ssh $addr chmod 744 $connector
} < /dev/null

ssh -C $addr /bin/bash -l $connector
