#!/bin/bash

user=lsp
host=185.222.117.73
reverse=2000

addr=$user@$host

project_root=$(pwd)

dest="/tmp/$(basename $project_root)"
archive=/tmp/transfer.tar
env_dir=env/

cd $project_root

project_ls() {
    git ls-files -X .gitignore
    git ls-files -X .gitignore -o
}

mount() {
    rm -f $archive

    if ssh $addr "test ! -d $dest"; then
        tar -czf $archive -T <(project_ls; [ -d $env_dir ] && echo $env_dir)

        scp $archive $addr:$archive

        ssh $addr << EOF
mkdir -p $dest
cd $dest
tar -xf $archive
echo > .projectile
EOF
    fi

    mainloop &
}

copy() {
    file=$(echo $1 | awk '{ print $1 $3 }')

    if ssh $addr "mkdir -p $(dirname $dest/$file)"; then
        scp $file $addr:$dest/$file
    fi
}

export -f copy
export addr dest

mainloop() {
    inotifywait -rm -e modify -e create -e moved_to $(project_ls) | parallel copy
}

exec 3<<EOF
suppress() {
    eval "$@" < /dev/null > /dev/stderr
}

cd $dest

if [ -d $env_dir ]; then
    export VIRTUAL_ENV=$env_dir
    source $env_dir/bin/activate
    suppress python3 -m pip install -r requirements.txt
elif [ -f Cargo.toml ]; then
    cargo build
fi

exec $@
EOF

mount < /dev/null > /dev/stderr

cat /proc/$$/fd/{3,0} | ssh -C $addr /bin/bash -l $connector
