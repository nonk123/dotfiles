#!/bin/bash

user=lsp
host=185.222.117.73
reverse=2000

addr=$user@$host

server=$1
project_root=$(realpath ${2:-.})
[ $# -gt 2 ] && shift 2

dest="/tmp/$(basename $project_root)"
archive=/tmp/transfer.tar
env_dir=env/

cd $project_root

function project_ls {
    git ls-files -X .gitignore
    git ls-files -X .gitignore -o
}

function mount {
    rm -f $archive

    if ssh $addr "test ! -d $dest"; then
        tar -czf $archive -T <(project_ls)

        ssh $addr "mkdir -p $dest"
        scp $archive $addr:$dest

        ssh $addr << EOF
cd $dest
tar -xf \$(basename $archive)
echo > .projectile

if [ $(test -d $env_dir && echo yes) ]; then
    python3 -m virtualenv $env_dir
    pip3 install -r requirements.txt
fi
EOF
    fi

    mainloop
}

function mainloop {
    inotifywait -rm -e modify -e create -e moved_to $(project_ls) \
        | parallel 'file=$(echo {} | awk "{ print \$1 \$3 }")' \
                   "ssh $addr 'mkdir -p \$(dirname $dest/\$file)'" \
                   "&& scp \$file $addr:$dest/\$file"
}

exec 3<<EOF
mkdir -p $dest
cd $dest
[ -d $env_dir ] && export VIRTUAL_ENV=\$(realpath $env_dir)
exec $server $@
EOF

mount &
exec cat /proc/$$/fd/{3,0} | ssh -C $addr /bin/bash -l
